#
# Copyright 2015 Universidad Complutense de Madrid
#
# This file is part of Numina
#
# Numina is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Numina is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Numina.  If not, see <http://www.gnu.org/licenses/>.
#


'''Unit test for metaclasses'''

import collections

from ..recipes import BaseRecipeAutoQC
from ..requirements import Requirement
from ..dataholders import Product
from ..metaclass import MapStoreType


def test_meta_mapping():
    '''MapStoreType is a mapping.'''

    # MapStoreType provides Mapping interface
    assert issubclass(MapStoreType, collections.Mapping)


def test_recipe_io_mapping():
    '''Test mapping interface for recipe in/ou.'''

    class TestRecipe(BaseRecipeAutoQC):

        somereq = Requirement(int, 'Some integer')
        someresult = Product(int, 'Some integer')

    # Autogenerated RecipeResult class has Mapping interface
    RR = TestRecipe.RecipeResult

    assert isinstance(RR, collections.Mapping)

    result = RR(someresult=1)

    # Autogenerated RecipeResult instances hasn't
    assert not isinstance(result, collections.Mapping)

    # Autogenerated RecipeInput class has Mapping interface
    RR = TestRecipe.RecipeInput

    assert isinstance(RR, collections.Mapping)

    reqs = RR(somereq=1)
    # Autogenerated RecipeInput instances hasn't
    assert not isinstance(reqs, collections.Mapping)
